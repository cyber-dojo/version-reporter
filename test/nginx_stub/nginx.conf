
server {
    listen 80;
    server_name  localhost;
    root /usr/share/nginx/html; # Path for static files

    #- - - - - - - - - - - - - - - - - - - - - - - -
    # Stub each service's /sha

    location /custom-start-points/sha {
      default_type application/json;
      return 200 '{"sha":"5b405c69381df51ec02af3818200c8fe28ce16eb"}';
    }

    location /exercises-start-points/sha {
      default_type application/json;
      return 200 '{"sha":"b57f4f5136ab49bd6b96779855d3750b51a5a85e"}';
    }

    location /languages-start-points/sha {
      default_type application/json;
      return 200 '{"sha":"d26be0eaecc42f39b97a029f0a32383ce140eea8"}';
    }

    location /creator/sha {
      default_type application/json;
      return 200 '{"sha":"f21895840c7878027059f3d8eae71e3280653dbc"}';
    }

    location /dashboard/sha {
      default_type application/json;
      return 200 '{"sha":"2d1b82e309ab657a3c2b3a1d361d52dd95ea02f7"}';
    }

    location /differ/sha {
      default_type application/json;
      return 200 '{"sha":"9ab524318f83f3c6b6d70cba86f77af843121808"}';
    }

    location /repler/sha {
      default_type application/json;
      return 200 '{"sha":"6a835b3ad1c9f66996cb50a6dd0ff54ec2b65c00"}';
    }

    location /runner/sha {
      default_type application/json;
      return 200 '{"sha":"65b6c849d4bb95ce92681a89ae48832a45031563"}';
    }

    location /saver/sha {
      default_type application/json;
      return 200 '{"sha":"8930f8c27061dba65c60c2216ee16dbde6389761"}';
    }

    location /web/sha {
      default_type application/json;
      return 200 '{"sha":"d8ae9c8b5a46f61481932c7ad5b3a46f597b8114"}';
    }

    #- - - - - - - - - - - - - - - - - - - - - - - -
    # The version-reporter service itself

    location /version-reporter {
      rewrite ^/version-reporter/(.*) /$1 break;
      proxy_pass http://version-reporter:4528;
    }

    #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    location /  {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_redirect off;

      # Try to serve static files from nginx.
      if (!-f $request_filename) {
        proxy_pass http://nginx:3000;
        break;
      }
    }

}
